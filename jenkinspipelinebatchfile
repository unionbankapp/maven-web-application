node{
try{
def mavenHome = tool name: 'maven3.9.7'
echo "The job name is : ${env.JOB_NAME}"
echo "The Build number is : ${env.BUILD_NUMBER}"
echo "The node name is : ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * * ')])])

//Checkout Code State
stage('CheckoutCode')
{git branch: 'development', credentialsId: 'c9ccd6b1-6002-4c17-a70b-2d24cb93d31b', url: 'https://github.com/unionbankapp/maven-web-application.git'
}
//Build
stage ('Build')
{sh "${mavenHome}/bin/mvn clean package"
}
// Execute SonarQube Report
stage('ExecuteSonarQubeReport')
{sh "${mavenHome}/bin/mvn sonar:sonar"
}
//UploadArtifacts Into Nexus
stage('UploadArtifactsIntoNexus')
{sh "${mavenHome}/bin/mvn deploy"}

//Deploy App into Tomcat Server

stage ('DeployApp')
{sshagent(['1f2806d8-9e83-4738-9cb3-ada293c876cd']) 
    // some block
{
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@43.204.145.41:/opt/apache-tomcat-9.0.89/webapps/"}}
} //try closing
catch(e){currentBuild.result="FAILURE"}
finally{sendSlackNotifications(currentBuild.result)}
}//node closing
//Function for SlackNotifications
def sendSlackNotifcations(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
